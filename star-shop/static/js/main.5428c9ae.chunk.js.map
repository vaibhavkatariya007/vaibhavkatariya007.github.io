{"version":3,"sources":["redux/modules/cart.js","redux/modules/products.js","redux/reducers.js","redux/cofigureStore.js","containers/index.js","Root.js","serviceWorker.js","index.js","redux/modules/constants.js","core/Footer/index.js","core/HeaderContainer/index.js","core/Loading/index.js","core/Product/index.js","core/SortBy/index.js","core/Filters/index.js","core/CartItem/index.js","core/PiceDetails/index.js","core/index.js"],"names":["initialState","productOnCart","count","error","request","products","data","items","sortBy","appReducer","combineReducers","cart","state","action","Obj","total","type","TYPES","payload","productId","qty","Object","assign","deleteQty","rootReducer","middlewares","thunk","configureStore","createStore","composeWithDevTools","applyMiddleware","ProductList","lazy","Cart","Root","store","fallback","exact","path","component","to","Boolean","window","location","hostname","match","__INITIAL_STATE__","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","UPDATE_SORT_BY","ADD_PRODUCT_TO_CART","DELETE_PRODUCT_FROM_CART","REQUEST_PRODUCTS","RECEIVE_PRODUCTS","REQUEST_PRODUCTS_ERROR","Footer","Date","getFullYear","Header","Layout","Search","Input","HeaderContainer","history","searchProduct","goToCart","className","onClick","push","allowClear","placeholder","onChange","e","target","value","antIcon","style","fontSize","spin","Loading","indicator","Product","onAddProduct","xs","sm","md","lg","xl","src","image","name","price","actual","display","discount","Sorting_Options","SortBy","sortVisible","onSortVisible","onSortby","map","sort","index","key","title","visible","footer","onCancel","Group","Filters","filterVisible","onFilterVisible","onApplyFilter","appliedvalue","useState","maxValue","setMaxValue","handleChange","disable","min","max","disabled","onOk","okText","CartItem","onDeleteProduct","PiceDetails","priceData","totalPrice","totalDiscount","totalPayable"],"mappings":"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","file":"static/js/main.5428c9ae.chunk.js","sourcesContent":["import * as TYPES from './constants';\r\n\r\nconst initialState = {\r\n  productOnCart: {},\r\n  count: 0,\r\n};\r\n\r\nexport default (state = initialState, action) => {\r\n  let Obj = {...state.productOnCart};\r\n  let total = state.count || 0;\r\n  switch (action.type) {\r\n    case TYPES.ADD_PRODUCT_TO_CART:\r\n      if (\r\n        Obj &&\r\n        Obj[action.payload.productId] &&\r\n        Obj[action.payload.productId].qty\r\n      ) {\r\n        Obj[action.payload.productId].qty = ++Obj[action.payload.productId].qty;\r\n        total += 1;\r\n      } else {\r\n        action.payload.qty = 1;\r\n        Obj[action.payload.productId] = {...action.payload};\r\n        total += 1;\r\n      }\r\n\r\n      return {\r\n        ...state,\r\n        productOnCart: Object.assign({}, Obj),\r\n        count: total,\r\n      };\r\n\r\n    case TYPES.DELETE_PRODUCT_FROM_CART:\r\n      if (\r\n        Obj &&\r\n        Obj[action.payload.productId] &&\r\n        Obj[action.payload.productId].qty &&\r\n        Obj[action.payload.productId].qty > 1 &&\r\n        action.payload.deleteQty === 1\r\n      ) {\r\n        Obj[action.payload.productId].qty = --Obj[action.payload.productId].qty;\r\n        total -= 1;\r\n      } else {\r\n        total -= Obj[action.payload.productId].qty;\r\n        delete Obj[action.payload.productId];\r\n      }\r\n\r\n      return {\r\n        ...state,\r\n        productOnCart: Object.assign({}, Obj),\r\n        count: total,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import * as TYPES from './constants';\r\nimport data from './../../cart.json';\r\n\r\nconst initialState = {\r\n  error: null,\r\n  request: false,\r\n  products: data.items || [],\r\n  sortBy: 'highToLow',\r\n};\r\n\r\nexport default (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case TYPES.REQUEST_PRODUCTS:\r\n      return {\r\n        ...state,\r\n        request: true,\r\n      };\r\n    case TYPES.RECEIVE_PRODUCTS:\r\n      return {...state, products: data.items, request: false};\r\n    case TYPES.REQUEST_PRODUCTS_ERROR:\r\n      return {\r\n        ...state,\r\n        error: true,\r\n        request: false,\r\n      };\r\n    case TYPES.UPDATE_SORT_BY:\r\n      return {\r\n        ...state,\r\n        sortBy: action.payload,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import {combineReducers} from 'redux';\r\n\r\nimport cartReducer from './modules/cart';\r\nimport productsReducer from './modules/products';\r\n\r\nconst appReducer = combineReducers({\r\n  cart: cartReducer,\r\n  products: productsReducer,\r\n});\r\n\r\nconst rootReducer = (state, action) => appReducer(state, action);\r\n\r\nexport default rootReducer;\r\n","import {createStore, applyMiddleware} from 'redux';\r\nimport logger from 'redux-logger';\r\nimport thunk from 'redux-thunk';\r\nimport {composeWithDevTools} from 'redux-devtools-extension';\r\n\r\nimport rootReducer from './reducers';\r\n\r\nlet middlewares = [thunk];\r\n\r\nif (process.env.NODE_ENV !== 'production') {\r\n  middlewares.push(logger);\r\n}\r\n\r\nconst configureStore = initialState => {\r\n  const store = createStore(\r\n    rootReducer,\r\n    initialState,\r\n    composeWithDevTools(applyMiddleware(...middlewares))\r\n  );\r\n  return store;\r\n};\r\n\r\nexport default configureStore;\r\n","import {lazy} from 'react';\r\n\r\nconst ProductList = lazy(() => import('./ProductList'));\r\nconst Cart = lazy(() => import('./Cart'));\r\n\r\nexport {ProductList, Cart};\r\n","import React, {Suspense} from 'react';\r\nimport {Provider} from 'react-redux';\r\nimport {\r\n  BrowserRouter as Router,\r\n  Switch,\r\n  Route,\r\n  Redirect,\r\n} from 'react-router-dom';\r\n\r\nimport {Loading} from './core';\r\n\r\nimport {ProductList, Cart} from './containers';\r\n\r\nconst Root = ({store}) => (\r\n  <Provider store={store}>\r\n    <Router>\r\n      <Suspense fallback={<Loading />}>\r\n        <Switch>\r\n          <Route exact path=\"/\" component={ProductList} />\r\n          <Route exact path=\"/cart\" component={Cart} />\r\n          <Redirect to=\"/\" />\r\n        </Switch>\r\n      </Suspense>\r\n    </Router>\r\n  </Provider>\r\n);\r\n\r\nexport default Root;\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport configureStore from './redux/cofigureStore';\nimport 'antd/dist/antd.css';\nimport './index.css';\nimport Root from './Root';\nimport * as serviceWorker from './serviceWorker';\n\nconst persistedState = window.__INITIAL_STATE__;\nconst store = configureStore(persistedState);\n\nReactDOM.render(<Root store={store} />, document.getElementById('root'));\nserviceWorker.unregister();\n","export const UPDATE_SORT_BY = 'UPDATE_SORT_BY';\r\nexport const ADD_PRODUCT_TO_CART = 'ADD_PRODUCT_TO_CART';\r\nexport const DELETE_PRODUCT_FROM_CART = 'DELETE_PRODUCT_FROM_CART';\r\nexport const REQUEST_PRODUCTS = 'REQUEST_PRODUCTS';\r\nexport const RECEIVE_PRODUCTS = 'RECEIVE_PRODUCTS';\r\nexport const REQUEST_PRODUCTS_ERROR = 'REQUEST_PRODUCTS_ERROR';\r\n","import React from 'react';\r\nimport { Layout } from 'antd';\r\n\r\nconst Footer = () => (\r\n  <Layout.Footer>\r\n    <span>&copy; Copyright {new Date().getFullYear()}</span>\r\n  </Layout.Footer>\r\n);\r\n\r\nexport default Footer;\r\n","import React from 'react';\r\n\r\nimport {Layout, Input, Icon, Badge} from 'antd';\r\n\r\nconst {Header} = Layout;\r\nconst {Search} = Input;\r\n\r\nconst HeaderContainer = ({history, searchProduct, goToCart, count}) => (\r\n  <Header>\r\n    <span className=\"logo\" onClick={() => history.push('/')}>\r\n      <Icon type=\"star\" /> <span className=\"label\">Shopping</span>\r\n    </span>\r\n    <Search\r\n      allowClear\r\n      placeholder=\"Search\"\r\n      onChange={e => {\r\n        searchProduct(e.target.value);\r\n      }}\r\n    />\r\n    {goToCart && (\r\n      <Badge count={count}>\r\n        <Icon onClick={goToCart} type=\"shopping-cart\" />\r\n      </Badge>\r\n    )}\r\n  </Header>\r\n);\r\n\r\nexport default HeaderContainer;\r\n","import React from 'react';\r\nimport {Spin, Icon} from 'antd';\r\n\r\nconst antIcon = <Icon type=\"loading\" style={{fontSize: 24}} spin />;\r\n\r\nconst Loading = () => (\r\n  <div className=\"loading\">\r\n    <Spin indicator={antIcon} />\r\n    Loading....\r\n  </div>\r\n);\r\n\r\nexport default Loading;\r\n","import React from 'react';\r\n\r\nimport {Button, Col} from 'antd';\r\nimport './product.css';\r\n\r\nconst Product = ({data, onAddProduct}) => {\r\n  return (\r\n    <Col className=\"gutter-row product\" xs={24} sm={12} md={8} lg={6} xl={6}>\r\n      <div className=\"gutter-box\">\r\n        <img src={data.image} className=\"product-image\" />\r\n        <span className=\"product-name\">{data.name}</span>\r\n        <div className=\"price-discount-container\">\r\n          <span className=\"actual-price\">&#8377; {data.price.actual}</span>\r\n          <span className=\"selling-price\">{data.price.display}</span>\r\n          <span className=\"discount\">{data.discount} % off</span>\r\n        </div>\r\n        <Button onClick={() => onAddProduct(data)}>Add to Cart</Button>\r\n      </div>\r\n    </Col>\r\n  );\r\n};\r\n\r\nexport default Product;\r\n","import React from 'react';\r\nimport {Modal, Radio} from 'antd';\r\nimport './sortby.css';\r\n\r\nconst Sorting_Options = [\r\n  {\r\n    name: 'Price -- High Low',\r\n    value: 'highToLow',\r\n  },\r\n  {\r\n    name: 'Price -- Low High',\r\n    value: 'lowToHigh',\r\n  },\r\n  {\r\n    name: 'Discount',\r\n    value: 'discount',\r\n  },\r\n];\r\n\r\nconst SortBy = ({sortVisible, onSortVisible, onSortby, sortBy}) => {\r\n  return (\r\n    <div className=\"sorting\">\r\n      <span className=\"label\">Sort By</span>\r\n      {Sorting_Options.map((sort, index) => (\r\n        <span\r\n          key={index}\r\n          className={`sortby ${sortBy == sort.value && 'active'}`}\r\n          onClick={() => onSortby(sort.value)}>\r\n          {sort.name}\r\n        </span>\r\n      ))}\r\n\r\n      <Modal\r\n        title=\"Sort By\"\r\n        visible={sortVisible}\r\n        footer={null}\r\n        onCancel={onSortVisible}>\r\n        <Radio.Group\r\n          onChange={e => {\r\n            onSortby(e.target.value);\r\n            onSortVisible();\r\n          }}\r\n          value={sortBy}>\r\n          {Sorting_Options.map((sort, index) => (\r\n            <Radio key={index} value={sort.value}>\r\n              {sort.name}\r\n            </Radio>\r\n          ))}\r\n        </Radio.Group>\r\n      </Modal>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SortBy;\r\n","import React, {useState} from 'react';\r\nimport {Slider, Button, Modal} from 'antd';\r\nimport './filters.css';\r\nconst Filters = ({\r\n  filterVisible,\r\n  onFilterVisible,\r\n  onApplyFilter,\r\n  appliedvalue,\r\n}) => {\r\n  const [maxValue, setMaxValue] = useState(null);\r\n  const onClear = () => {\r\n    setMaxValue(null);\r\n    onApplyFilter(null);\r\n  };\r\n  const handleChange = value => {\r\n    setMaxValue(value);\r\n  };\r\n  let disable = !maxValue;\r\n  if (maxValue <= 1000) {\r\n    disable = true;\r\n  }\r\n  return (\r\n    <div className=\"filtering\">\r\n      <span className=\"label\">Filters</span>\r\n      <div className=\"filter\">\r\n        <div className=\"max-min-value\">\r\n          <span>&#8377; 1000</span>\r\n          <span>&#8377; 100000</span>\r\n        </div>\r\n        <Slider\r\n          min={1000}\r\n          max={100000}\r\n          onChange={handleChange}\r\n          value={maxValue || 1000}\r\n        />\r\n        <div className=\"filter-type\">Prices</div>\r\n      </div>\r\n\r\n      <Button disabled={disable} onClick={() => onApplyFilter(maxValue)}>\r\n        Apply\r\n      </Button>\r\n      {maxValue && appliedvalue && (\r\n        <Button className=\"reset\" onClick={onClear}>\r\n          Clear Filters\r\n        </Button>\r\n      )}\r\n\r\n      <Modal\r\n        title=\"Filter Options\"\r\n        visible={filterVisible}\r\n        onOk={() => {\r\n          onApplyFilter(maxValue);\r\n          onFilterVisible();\r\n        }}\r\n        okText=\"Apply\"\r\n        onCancel={() => {\r\n          setMaxValue(null);\r\n          onApplyFilter(null);\r\n          onFilterVisible();\r\n        }}>\r\n        <div className=\"filter\">\r\n          <div className=\"max-min-value\">\r\n            <span>&#8377; 1000</span>\r\n            <span> &#8377; 100000</span>\r\n          </div>\r\n          <Slider\r\n            min={1000}\r\n            max={100000}\r\n            onChange={handleChange}\r\n            value={maxValue || 1000}\r\n          />\r\n          <div className=\"filter-type\">Prices</div>\r\n        </div>\r\n      </Modal>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Filters;\r\n","import React from 'react';\r\n\r\nimport {Button, Input} from 'antd';\r\nimport './cartitem.css';\r\n\r\nconst CartItem = ({data, onAddProduct, onDeleteProduct}) => {\r\n  return (\r\n    <div className=\"cart-item\">\r\n      <div className=\"item-detail-container\">\r\n        <img src={data.image} className=\"product-image\" />\r\n        <div className=\"details\">\r\n          <div className=\"product-name\">\r\n            <span>{data.name}</span>\r\n          </div>\r\n          <div className=\"price-details\">\r\n            <span className=\"actual-price\">&#8377; {data.price.actual}</span>\r\n            <span className=\"selling-price\">{data.price.display}</span>\r\n            <span className=\"discount\">{data.discount} % off</span>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div className=\"item-actions\">\r\n        <Button onClick={() => onDeleteProduct(data.productId, 1)}>-</Button>\r\n        <Input disabled={true} value={data.qty} />\r\n        <Button onClick={() => onAddProduct(data)}>+</Button>\r\n      </div>\r\n      <Button onClick={() => onDeleteProduct(data.productId, 'all')}>\r\n        REMOVE\r\n      </Button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CartItem;\r\n","import React from 'react';\r\nimport './pricedetails.css';\r\nconst PiceDetails = ({priceData, count}) => {\r\n  return (\r\n    <div className=\"price-details\">\r\n      <div className=\"header\">Price Details</div>\r\n      <div className=\"price-container\">\r\n        <span className=\"price-label\">Price (items {count})</span>:\r\n        <span className=\"price-unit\">&#8377; {priceData.totalPrice}</span>\r\n      </div>\r\n      <div className=\"discount-container\">\r\n        <span className=\"discount-label\">Discount</span>:\r\n        <span className=\"discount-unit\">&#8377; {priceData.totalDiscount}</span>\r\n      </div>\r\n      <div className=\"total-payable-container\">\r\n        <span className=\"total-label\">Total Payable</span>\r\n        <span className=\"total-unit\">&#8377; {priceData.totalPayable}</span>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default PiceDetails;\r\n","import Footer from './Footer/';\r\nimport HeaderContainer from './HeaderContainer/';\r\nimport Loading from './Loading/';\r\nimport Product from './Product/';\r\nimport SortBy from './SortBy/';\r\nimport Filters from './Filters/';\r\nimport CartItem from './CartItem/';\r\nimport PiceDetails from './PiceDetails/';\r\n\r\nexport {\r\n  HeaderContainer,\r\n  Footer,\r\n  Filters,\r\n  Product,\r\n  Loading,\r\n  SortBy,\r\n  CartItem,\r\n  PiceDetails,\r\n};\r\n"],"sourceRoot":""}